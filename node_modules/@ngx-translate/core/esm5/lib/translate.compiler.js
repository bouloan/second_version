/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { __extends } from "tslib";
import { Injectable } from "@angular/core";
/**
 * @abstract
 */
import * as ɵngcc0 from '@angular/core';
var /**
 * @abstract
 */
TranslateCompiler = /** @class */ (function () {
    function TranslateCompiler() {
    }
    return TranslateCompiler;
}());
/**
 * @abstract
 */
export { TranslateCompiler };
if (false) {
    /**
     * @abstract
     * @param {?} value
     * @param {?} lang
     * @return {?}
     */
    TranslateCompiler.prototype.compile = function (value, lang) { };
    /**
     * @abstract
     * @param {?} translations
     * @param {?} lang
     * @return {?}
     */
    TranslateCompiler.prototype.compileTranslations = function (translations, lang) { };
}
/**
 * This compiler is just a placeholder that does nothing, in case you don't need a compiler at all
 */
var TranslateFakeCompiler = /** @class */ (function (_super) {
    __extends(TranslateFakeCompiler, _super);
    function TranslateFakeCompiler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @param {?} value
     * @param {?} lang
     * @return {?}
     */
    TranslateFakeCompiler.prototype.compile = /**
     * @param {?} value
     * @param {?} lang
     * @return {?}
     */
    function (value, lang) {
        return value;
    };
    /**
     * @param {?} translations
     * @param {?} lang
     * @return {?}
     */
    TranslateFakeCompiler.prototype.compileTranslations = /**
     * @param {?} translations
     * @param {?} lang
     * @return {?}
     */
    function (translations, lang) {
        return translations;
    };
TranslateFakeCompiler.ɵfac = /*@__PURE__*/ function () { var ɵTranslateFakeCompiler_BaseFactory; return function TranslateFakeCompiler_Factory(t) { return (ɵTranslateFakeCompiler_BaseFactory || (ɵTranslateFakeCompiler_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TranslateFakeCompiler)))(t || TranslateFakeCompiler); }; }();
TranslateFakeCompiler.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: TranslateFakeCompiler, factory: function (t) { return TranslateFakeCompiler.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TranslateFakeCompiler, [{
        type: Injectable
    }], null, null); })();
    return TranslateFakeCompiler;
}(TranslateCompiler));
export { TranslateFakeCompiler };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRlLmNvbXBpbGVyLmpzIiwic291cmNlcyI6WyJAbmd4LXRyYW5zbGF0ZS9jb3JlL2xpYi90cmFuc2xhdGUuY29tcGlsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3pDO0FBQ0c7QUFBYTs7QUFBaEI7QUFBUTtBQUFhO0FBQUk7QUFDTyxJQURoQztBQUErQixJQUkvQixDQUFDO0FBQ0QsSUFEQSx3QkFBQztBQUFELENBQUMsQUFKRCxJQUlDO0FBQ0Q7QUFDRztBQUNTO0FBQUk7QUFBOEI7QUFBYTtBQUFRO0FBQWlCO0FBRS9FO0FBQ1M7QUFBbUI7QUFBUSxJQVR2QyxpRUFBaUU7QUFDbkU7QUFDTztBQUFpQjtBQUErQjtBQUl0RDtBQUFtQjtBQUFRLElBSjFCLG9GQUFtRTtBQUNyRTtBQUNBO0FBQ0c7QUFDK0Y7QUFFbEc7QUFDaUQsSUFBTix5Q0FBaUI7QUFBQyxJQUQ3RDtBQUNxQjtBQUNVLElBTy9CLENBQUM7QUFDRDtBQUFRO0FBQXdCO0FBQXVCO0FBQW1CO0FBQVEsSUFSaEYsdUNBQU87QUFBTztBQUF3QjtBQUNyQztBQUVIO0FBQ08sSUFKTCxVQUFRLEtBQWEsRUFBRSxJQUFZO0FBQUksUUFDckMsT0FBTyxLQUFLLENBQUM7QUFDakIsSUFBRSxDQUFDO0FBRUg7QUFBUTtBQUErQjtBQUN2QztBQUFtQjtBQUNqQixJQUZBLG1EQUFtQjtBQUFPO0FBQStCO0FBQ3ZDO0FBR1o7QUFBUSxJQUpkLFVBQW9CLFlBQWlCLEVBQUUsSUFBWTtBQUFJLFFBQ3JELE9BQU8sWUFBWSxDQUFDO0FBQ3hCLElBQUUsQ0FBQzt5REFSRixVQUFVOzs7OzBCQUNMO0FBQUMsSUFRUCw0QkFBQztBQUNBLENBREEsQUFURCxDQUMyQyxpQkFBaUIsR0FRM0Q7QUFDRCxTQVRhLHFCQUFxQjtBQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgVHJhbnNsYXRlQ29tcGlsZXIge1xuICBhYnN0cmFjdCBjb21waWxlKHZhbHVlOiBzdHJpbmcsIGxhbmc6IHN0cmluZyk6IHN0cmluZyB8IEZ1bmN0aW9uO1xuXG4gIGFic3RyYWN0IGNvbXBpbGVUcmFuc2xhdGlvbnModHJhbnNsYXRpb25zOiBhbnksIGxhbmc6IHN0cmluZyk6IGFueTtcbn1cblxuLyoqXG4gKiBUaGlzIGNvbXBpbGVyIGlzIGp1c3QgYSBwbGFjZWhvbGRlciB0aGF0IGRvZXMgbm90aGluZywgaW4gY2FzZSB5b3UgZG9uJ3QgbmVlZCBhIGNvbXBpbGVyIGF0IGFsbFxuICovXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgVHJhbnNsYXRlRmFrZUNvbXBpbGVyIGV4dGVuZHMgVHJhbnNsYXRlQ29tcGlsZXIge1xuICBjb21waWxlKHZhbHVlOiBzdHJpbmcsIGxhbmc6IHN0cmluZyk6IHN0cmluZyB8IEZ1bmN0aW9uIHtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cblxuICBjb21waWxlVHJhbnNsYXRpb25zKHRyYW5zbGF0aW9uczogYW55LCBsYW5nOiBzdHJpbmcpOiBhbnkge1xuICAgIHJldHVybiB0cmFuc2xhdGlvbnM7XG4gIH1cbn1cbiJdfQ==