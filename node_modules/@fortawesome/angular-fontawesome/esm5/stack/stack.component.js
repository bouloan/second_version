import { __decorate } from "tslib";
import { Component, ElementRef, Input, OnChanges, OnInit, Renderer2, SimpleChanges } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

var _c0 = [[["fa-icon", "stackItemSize", ""], ["fa-duotone-icon", "stackItemSize", ""]]];
var _c1 = ["fa-icon[stackItemSize],fa-duotone-icon[stackItemSize]"];
var FaStackComponent = /** @class */ (function () {
    function FaStackComponent(renderer, elementRef) {
        this.renderer = renderer;
        this.elementRef = elementRef;
    }
    FaStackComponent.prototype.ngOnInit = function () {
        this.renderer.addClass(this.elementRef.nativeElement, 'fa-stack');
    };
    FaStackComponent.prototype.ngOnChanges = function (changes) {
        if ('size' in changes) {
            if (changes.size.currentValue != null) {
                this.renderer.addClass(this.elementRef.nativeElement, "fa-" + changes.size.currentValue);
            }
            if (changes.size.previousValue != null) {
                this.renderer.removeClass(this.elementRef.nativeElement, "fa-" + changes.size.previousValue);
            }
        }
    };
    FaStackComponent.ctorParameters = function () { return [
        { type: Renderer2 },
        { type: ElementRef }
    ]; };
    __decorate([
        Input()
    ], FaStackComponent.prototype, "size", void 0);
FaStackComponent.ɵfac = function FaStackComponent_Factory(t) { return new (t || FaStackComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
FaStackComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FaStackComponent, selectors: [["fa-stack"]], inputs: { size: "size" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c1, decls: 1, vars: 0, template: function FaStackComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c0);
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FaStackComponent, [{
        type: Component,
        args: [{
                selector: 'fa-stack',
                // TODO: See if it is better to select fa-icon and throw if it does not have stackItemSize directive
                template: "\n    <ng-content select=\"fa-icon[stackItemSize],fa-duotone-icon[stackItemSize]\"></ng-content>\n  "
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { size: [{
            type: Input
        }] }); })();
    return FaStackComponent;
}());
export { FaStackComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhY2suY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJAZm9ydGF3ZXNvbWUvYW5ndWxhci1mb250YXdlc29tZS9zdGFjay9zdGFjay5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxhQUFhLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7O0FBVTFHO0FBQW9ELElBU2xELDBCQUFvQixRQUFtQixFQUFVLFVBQXNCO0FBQUksUUFBdkQsYUFBUSxHQUFSLFFBQVEsQ0FBVztBQUFDLFFBQVMsZUFBVSxHQUFWLFVBQVUsQ0FBWTtBQUFDLElBQUUsQ0FBQztBQUM3RSxJQUNFLG1DQUFRLEdBQVI7QUFDRCxRQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFFLFVBQVUsQ0FBQyxDQUFDO0FBQ3RFLElBQUUsQ0FBQztBQUVILElBQUUsc0NBQVcsR0FBWCxVQUFZLE9BQXNCO0FBQ3BDLFFBQUksSUFBSSxNQUFNLElBQUksT0FBTyxFQUFFO0FBQzNCLFlBQU0sSUFBSSxPQUFPLENBQUMsSUFBSSxDQUFDLFlBQVksSUFBSSxJQUFJLEVBQUU7QUFDN0MsZ0JBQVEsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLEVBQUUsUUFBTSxPQUFPLENBQUMsSUFBSSxDQUFDLFlBQWMsQ0FBQyxDQUFDO0FBQ2pHLGFBQU87QUFDUCxZQUFNLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxhQUFhLElBQUksSUFBSSxFQUFFO0FBQzlDLGdCQUFRLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFFLFFBQU0sT0FBTyxDQUFDLElBQUksQ0FBQyxhQUFlLENBQUMsQ0FBQztBQUNyRyxhQUFPO0FBQ1AsU0FBSztBQUNMLElBQUUsQ0FBQztBQUNGO0FBQzJELGdCQWpCNUIsU0FBUztBQUFJLGdCQUFrQixVQUFVO0FBQUc7QUFFckUsSUFKSTtBQUFhLFFBQXJCLEtBQUssRUFBRTtBQUFDLGtEQUFnQjtJQVBkLGdCQUFnQix3QkFQNUIsU0FBUyxDQUFDLGNBQ1QsUUFBUSxFQUFFLFVBQVUsY0FDcEI7V0FBb0csYUFDcEcsUUFBUSxFQUFFLHNHQUVULFVBQ0YsQ0FBQyxRQUNXLGdCQUFnQixDQXlCNUI7Ozs7Ozs7Ozs7Ozs7b0JBQ0Q7QUFBQyxJQURELHVCQUFDO0FBQ0EsQ0FEQSxBQXpCRCxJQXlCQztBQUNELFNBMUJhLGdCQUFnQjtBQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCwgT25DaGFuZ2VzLCBPbkluaXQsIFJlbmRlcmVyMiwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU2l6ZVByb3AgfSBmcm9tICdAZm9ydGF3ZXNvbWUvZm9udGF3ZXNvbWUtc3ZnLWNvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdmYS1zdGFjaycsXG4gIC8vIFRPRE86IFNlZSBpZiBpdCBpcyBiZXR0ZXIgdG8gc2VsZWN0IGZhLWljb24gYW5kIHRocm93IGlmIGl0IGRvZXMgbm90IGhhdmUgc3RhY2tJdGVtU2l6ZSBkaXJlY3RpdmVcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGVudCBzZWxlY3Q9XCJmYS1pY29uW3N0YWNrSXRlbVNpemVdLGZhLWR1b3RvbmUtaWNvbltzdGFja0l0ZW1TaXplXVwiPjwvbmctY29udGVudD5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgRmFTdGFja0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcbiAgLyoqXG4gICAqIFNpemUgb2YgdGhlIHN0YWNrZWQgaWNvbi5cbiAgICogTm90ZSB0aGF0IHN0YWNrZWQgaWNvbiBpcyBieSBkZWZhdWx0IDIgdGltZXMgYmlnZ2VyLCB0aGFuIG5vbi1zdGFja2VkIGljb24uXG4gICAqIFlvdSdsbCBuZWVkIHRvIHNldCBzaXplIHVzaW5nIGN1c3RvbSBDU1MgdG8gYWxpZ24gc3RhY2tlZCBpY29uIHdpdGggYVxuICAgKiBzaW1wbGUgb25lLiBFLmcuIGBmYS1zdGFjayB7IGZvbnQtc2l6ZTogMC41ZW07IH1gLlxuICAgKi9cbiAgQElucHV0KCkgc2l6ZT86IFNpemVQcm9wO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMiwgcHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMucmVuZGVyZXIuYWRkQ2xhc3ModGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsICdmYS1zdGFjaycpO1xuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xuICAgIGlmICgnc2l6ZScgaW4gY2hhbmdlcykge1xuICAgICAgaWYgKGNoYW5nZXMuc2l6ZS5jdXJyZW50VmFsdWUgIT0gbnVsbCkge1xuICAgICAgICB0aGlzLnJlbmRlcmVyLmFkZENsYXNzKHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LCBgZmEtJHtjaGFuZ2VzLnNpemUuY3VycmVudFZhbHVlfWApO1xuICAgICAgfVxuICAgICAgaWYgKGNoYW5nZXMuc2l6ZS5wcmV2aW91c1ZhbHVlICE9IG51bGwpIHtcbiAgICAgICAgdGhpcy5yZW5kZXJlci5yZW1vdmVDbGFzcyh0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCwgYGZhLSR7Y2hhbmdlcy5zaXplLnByZXZpb3VzVmFsdWV9YCk7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXX0=