import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as ɵngcc0 from '@angular/core';
var FaConfig = /** @class */ (function () {
    function FaConfig() {
        /**
         * Default prefix to use, when one is not provided with the icon name.
         *
         * @default 'fas'
         */
        this.defaultPrefix = 'fas';
        /**
         * Provides a fallback icon to use whilst main icon is being loaded asynchronously.
         * When value is null, then fa-icon component will throw an error if icon input is missing.
         * When value is not null, then the provided icon will be used as a fallback icon if icon input is missing.
         *
         * @default null
         */
        this.fallbackIcon = null;
        /**
         * Whether components should lookup icon definitions in the global icon
         * library (the one available from
         * `import { library } from '@fortawesome/fontawesome-svg-core')`.
         *
         * See https://github.com/FortAwesome/angular-fontawesome/blob/master/docs/usage/icon-library.md
         * for detailed description of library modes.
         *
         * - 'unset' - Components should lookup icon definitions in the global library
         * and emit warning if they find a definition there. This option is a default
         * to assist existing applications with a migration. Applications are expected
         * to switch to using {@link FaIconLibrary}.
         * - true - Components should lookup icon definitions in the global library.
         * Note that global icon library is deprecated and support for it will be
         * removed. This option can be used to temporarily suppress warnings.
         * - false - Components should not lookup icon definitions in the global
         * library. Library will throw an error if missing icon is found in the global
         * library.
         *
         * @deprecated This option is deprecated since 0.5.0. In 0.6.0 default will
         * be changed to false. In 0.7.0 the option will be removed together with the
         * support for the global icon library.
         *
         * @default false
         */
        this.globalLibrary = false;
    }
    FaConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function FaConfig_Factory() { return new FaConfig(); }, token: FaConfig, providedIn: "root" });
FaConfig.ɵfac = function FaConfig_Factory(t) { return new (t || FaConfig)(); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FaConfig, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return []; }, null); })();
    return FaConfig;
}());
export { FaConfig };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlcyI6WyJAZm9ydGF3ZXNvbWUvYW5ndWxhci1mb250YXdlc29tZS9jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0M7O0FBSUE7QUFFYyxJQUZkO0FBQXNCLFFBQ3BCO0FBQ0Y7QUFFQztBQUFXO0FBRUEsV0FEUDtBQUNMLFFBQUUsa0JBQWEsR0FBZSxLQUFLLENBQUM7QUFDcEMsUUFDRTtBQUNGO0FBQ007QUFDTTtBQUVDO0FBQ1I7QUFDbUIsV0FEbkI7QUFDTCxRQUFFLGlCQUFZLEdBQW1CLElBQUksQ0FBQztBQUN0QyxRQVFFO0FBQ0Y7QUFDTTtBQUNNO0FBRUM7QUFBVztBQUNNO0FBRUM7QUFBVztBQUNNO0FBQ007QUFFekM7QUFBcUQ7QUFDTTtBQUVsRTtBQUNHO0FBQ0E7QUFFb0U7QUFDMUQ7QUFBVztBQUNJO0FBTWpDO0FBQWdEO0FBQVc7QUFBMEIsV0FIakY7QUFDTCxRQUFFLGtCQUFhLEdBQXNCLEtBQUssQ0FBQztBQUMzQyxLQUFDO0FBQ0Q7SUFuRGEsUUFBUSx3QkFEcEIsVUFBVSxDQUFDLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxDQUFDLFFBQ3RCO01BQVEsQ0FrRHBCOzs7Z0RBQ0Q7QUFBQyxtQkF4REQ7QUFBRSxDQXVERCxBQWxERCxJQWtEQztBQUNELFNBbkRhLFFBQVE7QUFDcEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJY29uRGVmaW5pdGlvbiwgSWNvblByZWZpeCB9IGZyb20gJ0Bmb3J0YXdlc29tZS9mb250YXdlc29tZS1jb21tb24tdHlwZXMnO1xuaW1wb3J0IHsgRmFJY29uTGlicmFyeSB9IGZyb20gJy4vaWNvbi1saWJyYXJ5JztcblxuQEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSlcbmV4cG9ydCBjbGFzcyBGYUNvbmZpZyB7XG4gIC8qKlxuICAgKiBEZWZhdWx0IHByZWZpeCB0byB1c2UsIHdoZW4gb25lIGlzIG5vdCBwcm92aWRlZCB3aXRoIHRoZSBpY29uIG5hbWUuXG4gICAqXG4gICAqIEBkZWZhdWx0ICdmYXMnXG4gICAqL1xuICBkZWZhdWx0UHJlZml4OiBJY29uUHJlZml4ID0gJ2Zhcyc7XG5cbiAgLyoqXG4gICAqIFByb3ZpZGVzIGEgZmFsbGJhY2sgaWNvbiB0byB1c2Ugd2hpbHN0IG1haW4gaWNvbiBpcyBiZWluZyBsb2FkZWQgYXN5bmNocm9ub3VzbHkuXG4gICAqIFdoZW4gdmFsdWUgaXMgbnVsbCwgdGhlbiBmYS1pY29uIGNvbXBvbmVudCB3aWxsIHRocm93IGFuIGVycm9yIGlmIGljb24gaW5wdXQgaXMgbWlzc2luZy5cbiAgICogV2hlbiB2YWx1ZSBpcyBub3QgbnVsbCwgdGhlbiB0aGUgcHJvdmlkZWQgaWNvbiB3aWxsIGJlIHVzZWQgYXMgYSBmYWxsYmFjayBpY29uIGlmIGljb24gaW5wdXQgaXMgbWlzc2luZy5cbiAgICpcbiAgICogQGRlZmF1bHQgbnVsbFxuICAgKi9cbiAgZmFsbGJhY2tJY29uOiBJY29uRGVmaW5pdGlvbiA9IG51bGw7XG5cbiAgLyoqXG4gICAqIFNldCBpY29ucyB0byB0aGUgc2FtZSBmaXhlZCB3aWR0aC5cbiAgICogQHNlZSB7QGxpbms6IGh0dHBzOi8vZm9udGF3ZXNvbWUuY29tL2hvdy10by11c2Uvb24tdGhlLXdlYi9zdHlsaW5nL2ZpeGVkLXdpZHRoLWljb25zfVxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgZml4ZWRXaWR0aD86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgY29tcG9uZW50cyBzaG91bGQgbG9va3VwIGljb24gZGVmaW5pdGlvbnMgaW4gdGhlIGdsb2JhbCBpY29uXG4gICAqIGxpYnJhcnkgKHRoZSBvbmUgYXZhaWxhYmxlIGZyb21cbiAgICogYGltcG9ydCB7IGxpYnJhcnkgfSBmcm9tICdAZm9ydGF3ZXNvbWUvZm9udGF3ZXNvbWUtc3ZnLWNvcmUnKWAuXG4gICAqXG4gICAqIFNlZSBodHRwczovL2dpdGh1Yi5jb20vRm9ydEF3ZXNvbWUvYW5ndWxhci1mb250YXdlc29tZS9ibG9iL21hc3Rlci9kb2NzL3VzYWdlL2ljb24tbGlicmFyeS5tZFxuICAgKiBmb3IgZGV0YWlsZWQgZGVzY3JpcHRpb24gb2YgbGlicmFyeSBtb2Rlcy5cbiAgICpcbiAgICogLSAndW5zZXQnIC0gQ29tcG9uZW50cyBzaG91bGQgbG9va3VwIGljb24gZGVmaW5pdGlvbnMgaW4gdGhlIGdsb2JhbCBsaWJyYXJ5XG4gICAqIGFuZCBlbWl0IHdhcm5pbmcgaWYgdGhleSBmaW5kIGEgZGVmaW5pdGlvbiB0aGVyZS4gVGhpcyBvcHRpb24gaXMgYSBkZWZhdWx0XG4gICAqIHRvIGFzc2lzdCBleGlzdGluZyBhcHBsaWNhdGlvbnMgd2l0aCBhIG1pZ3JhdGlvbi4gQXBwbGljYXRpb25zIGFyZSBleHBlY3RlZFxuICAgKiB0byBzd2l0Y2ggdG8gdXNpbmcge0BsaW5rIEZhSWNvbkxpYnJhcnl9LlxuICAgKiAtIHRydWUgLSBDb21wb25lbnRzIHNob3VsZCBsb29rdXAgaWNvbiBkZWZpbml0aW9ucyBpbiB0aGUgZ2xvYmFsIGxpYnJhcnkuXG4gICAqIE5vdGUgdGhhdCBnbG9iYWwgaWNvbiBsaWJyYXJ5IGlzIGRlcHJlY2F0ZWQgYW5kIHN1cHBvcnQgZm9yIGl0IHdpbGwgYmVcbiAgICogcmVtb3ZlZC4gVGhpcyBvcHRpb24gY2FuIGJlIHVzZWQgdG8gdGVtcG9yYXJpbHkgc3VwcHJlc3Mgd2FybmluZ3MuXG4gICAqIC0gZmFsc2UgLSBDb21wb25lbnRzIHNob3VsZCBub3QgbG9va3VwIGljb24gZGVmaW5pdGlvbnMgaW4gdGhlIGdsb2JhbFxuICAgKiBsaWJyYXJ5LiBMaWJyYXJ5IHdpbGwgdGhyb3cgYW4gZXJyb3IgaWYgbWlzc2luZyBpY29uIGlzIGZvdW5kIGluIHRoZSBnbG9iYWxcbiAgICogbGlicmFyeS5cbiAgICpcbiAgICogQGRlcHJlY2F0ZWQgVGhpcyBvcHRpb24gaXMgZGVwcmVjYXRlZCBzaW5jZSAwLjUuMC4gSW4gMC42LjAgZGVmYXVsdCB3aWxsXG4gICAqIGJlIGNoYW5nZWQgdG8gZmFsc2UuIEluIDAuNy4wIHRoZSBvcHRpb24gd2lsbCBiZSByZW1vdmVkIHRvZ2V0aGVyIHdpdGggdGhlXG4gICAqIHN1cHBvcnQgZm9yIHRoZSBnbG9iYWwgaWNvbiBsaWJyYXJ5LlxuICAgKlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgZ2xvYmFsTGlicmFyeTogYm9vbGVhbiB8ICd1bnNldCcgPSBmYWxzZTtcbn1cbiJdfQ==