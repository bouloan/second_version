{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../video.service\";\nimport * as i2 from \"@angular/youtube-player\";\nconst _c0 = [\"video\"];\nexport let VideoComponent = /*#__PURE__*/(() => {\n  class VideoComponent {\n    constructor(videoService) {\n      this.videoService = videoService;\n    }\n\n    ngOnInit() {\n      const tag = document.createElement(\"script\");\n      tag.src = \"https://www.youtube.com/iframe_api\";\n      document.body.appendChild(tag);\n      this.setVideoSize(window.innerWidth);\n      this.videoService.getvideoState().subscribe(s => {\n        this.videoIsStop = s;\n\n        if (this.video.getPlayerState() !== -1) {\n          this.video.stopVideo();\n        }\n      });\n    }\n\n    onResize(event) {\n      this.setVideoSize(event.target.innerWidth);\n    }\n\n    setVideoSize(width) {\n      if (width < 551) {\n        this.videoWidth = width;\n        this.videoHeight = 250;\n      } else if (width < 992) {\n        this.videoWidth = width / 1.5;\n        this.videoHeight = 300;\n      } else {\n        this.videoWidth = width / 3;\n        this.videoHeight = 450;\n      }\n    }\n\n  }\n\n  VideoComponent.ɵfac = function VideoComponent_Factory(t) {\n    return new (t || VideoComponent)(i0.ɵɵdirectiveInject(i1.VideoService));\n  };\n\n  VideoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: VideoComponent,\n    selectors: [[\"mcna-video\"]],\n    viewQuery: function VideoComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.video = _t.first);\n      }\n    },\n    hostBindings: function VideoComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"resize\", function VideoComponent_resize_HostBindingHandler($event) {\n          return ctx.onResize($event);\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    inputs: {\n      videoId: \"videoId\"\n    },\n    decls: 2,\n    vars: 3,\n    consts: [[3, \"videoId\", \"height\", \"width\", \"resize\"], [\"video\", \"\"]],\n    template: function VideoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"youtube-player\", 0, 1);\n        i0.ɵɵlistener(\"resize\", function VideoComponent_Template_youtube_player_resize_0_listener($event) {\n          return ctx.onResize($event);\n        }, false, i0.ɵɵresolveWindow);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵpropertyInterpolate(\"videoId\", ctx.videoId);\n        i0.ɵɵproperty(\"height\", ctx.videoHeight)(\"width\", ctx.videoWidth);\n      }\n    },\n    directives: [i2.YouTubePlayer],\n    styles: [\"\"]\n  });\n  return VideoComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}