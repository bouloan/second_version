{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let DynamicComponentService = /*#__PURE__*/(() => {\n  class DynamicComponentService {\n    constructor(_componentFactoryResolver) {\n      this._componentFactoryResolver = _componentFactoryResolver; //list of created component references\n\n      this.componentsReferences = [];\n    }\n\n    addComponent(component, host, content) {\n      const modalContentCmpFactory = this._componentFactoryResolver.resolveComponentFactory(component);\n\n      const hostViewContainerRef = host; //hostViewContainerRef.clear();\n\n      const newComponent = hostViewContainerRef.createComponent(modalContentCmpFactory);\n\n      if (content !== undefined) {\n        newComponent.instance.content = content;\n      } //add reference for newly create component\n\n\n      this.componentsReferences.push(newComponent);\n    }\n\n    removeComponents() {\n      this.componentsReferences.map(componentRef => componentRef.destroy());\n    }\n\n  }\n\n  DynamicComponentService.ɵfac = function DynamicComponentService_Factory(t) {\n    return new (t || DynamicComponentService)(i0.ɵɵinject(i0.ComponentFactoryResolver));\n  };\n\n  DynamicComponentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DynamicComponentService,\n    factory: DynamicComponentService.ɵfac,\n    providedIn: \"root\"\n  });\n  return DynamicComponentService;\n})();","map":null,"metadata":{},"sourceType":"module"}